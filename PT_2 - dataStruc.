// Filename: MusicPlaylist.java

class Node {
    String songTitle;   // field for song title
    Node next;          // reference to the next node

    // constructor to initialize fields
    public Node(String songTitle) {
        this.songTitle = songTitle;
        this.next = null;
    }
}

public class MusicPlaylist {

    Node head; // starting point of the linked list

    // Method to display the playlist
    public void show() {
        Node current = head;
        while (current != null) {
            System.out.print(current.songTitle + " â†’ ");
            current = current.next;
        }
        System.out.println("null");
    }

    // Method to add song at the end
    public void addSong(String title) {
        Node newNode = new Node(title);
        if (head == null) {
            head = newNode;
            return;
        }
        Node current = head;
        while (current.next != null) {
            current = current.next;
        }
        current.next = newNode;
    }

    // Method to delete a song by title
    public void deleteSong(String title) {
        if (head == null) return;

        // If the song to delete is the head
        if (head.songTitle.equals(title)) {
            head = head.next;
            return;
        }

        Node current = head;
        while (current.next != null && !current.next.songTitle.equals(title)) {
            current = current.next;
        }

        // If song found, unlink it
        if (current.next != null) {
            current.next = current.next.next;
        }
    }

    public static void main(String[] args) {
        MusicPlaylist playlist = new MusicPlaylist();

        // Step 2: Create 3 nodes with songs: Song A -> Song B -> Song C
        playlist.addSong("Song A");
        playlist.addSong("Song B");
        playlist.addSong("Song C");

        System.out.println("Initial Playlist:");
        playlist.show();

        // Step 4: Append "Song D" at the end
        playlist.addSong("Song D");
        System.out.println("\nPlaylist after adding Song D:");
        playlist.show();

        // Step 5: Delete "Song B"
        playlist.deleteSong("Song B");
        System.out.println("\nPlaylist after deleting Song B:");
        playlist.show();
    }
}
